version: '3.8'

services:
  db_pg:
    image: postgres:latest
    environment:
      POSTGRES_DB: countmein
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 1m30s
      timeout: 30s
      retries: 3
      start_period: 30s
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  db_mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: countmein
      # MONGO_INITDB_ROOT_USERNAME: mongo
      # MONGO_INITDB_ROOT_PASSWORD: mongo
    healthcheck:
      test: eccho 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 1m30s
      timeout: 30s
      retries: 3
      start_period: 30s
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092,PLAINTEXT://deti-ies-20.ua.pt:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
      
  kafka_2_mongo_service:
    build:
      context: services
    image: leikrad/ies_kafka_2_mongo_service:latest
    depends_on:
      db_mongo:
        condition: service_healthy
      
  web-app:
    build:
      context: frontend
    image: leikrad/ies_web-app:latest
    ports:
      - "3000:3000"
    volumes:
      - node_modules:/frontend/node_modules
      - ./frontend:/frontend
    restart: unless-stopped

  api:
    depends_on:
      - db_pg
      - db_mongo
    build: 
      context: backend
    image: leikrad/ies_api:latest
    restart:
      unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url" : "jdbc:postgresql://db_pg:5432/countmein",
        "spring.datasource.username" : "postgres",
        "spring.datasource.password" : "postgres",
        "spring.data.mongodb.database" : "countmein",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "jwt.secret" : "3278a107eddccc12c83349a310f3a298928bb05f55a4e289acda858bbc73ad40",
        "jwt.expiration" : "7200",
        "logging.level.org.springframework" : "DEBUG",
        "spring.kafka.bootstrap-servers" : "kafka:9092"
        }'

  proxy:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web-app
      - api
    restart: unless-stopped
  
volumes:
  pg_data:
    driver: local
  mongo_data:
    driver: local
  node_modules:
    driver: local
